# 一、数字类型
# 1.1 数字类型的组成
# 1.1.1 整数-不同进制的转换
# 默认输入十进制
# 二进制Ob、八进制Oo、十六进制Ox
16 == Ob10000 == Oo20 == Ox10

a = bin(16)  # 转二进制
b = oct(16)  # 转八进制
c = hex(16)  # 转十六进制
# 0b10000 0o20 0x10
# 转换后结果为字符串类型

# 其他进制转十进制
d = int(a, 2)   # 二进制转十进制
e = int(b, 8)   # 八进制转十进制
f = int(c, 16)  # 十六进制转十进制
# 16 16 16

# 1.1.2 浮点数----不确定性
# **计算机采用二进制小数来表示浮点数的小数部分**
# * 部分小数不能用二进制小数完全表示
0.1+0.2    # 0.30000000000000004
0.1 + 0.7  # 0.7999999999999999

# 1.1.3 复数----a+bj
# j或J均可、虚部系数为1，要显式写出
2+1j


# 1.2 数字运算操作符 （a操作符b） 
13 % 5       # 3 
# 整数与浮点数运算结果是浮点数
# 除法运算的结果是浮点数


# 1.3 数字运算操作函数 
abs(-4)   # 4
abs(3+4j)  # 对复数a+bj 执行的是求模运算(a^2+b^2)^0.5   --- 5.0
pow(2, 5)  # pow(x,n) x的n次方  等价于x**n   --- 32
pow(2, 5, 3) # 2^5 % 3  更快速   --- 2
a = 1.618
print(round(a))      # 默认四舍五入为整数  --- 2
print(round(a, 2))   # 参数2表示四舍五入后保留2位小数  --- 1.62
print(round(a, 5))   # 位数不足，无需补齐  --- 1.618
# 整数商和模运算
divmod(13, 5)   # 较（x//y,x % y）更快，只执行了一次x/y  --- (2,3)
a = [3, 2, 3, 6, 9, 4, 5]
print("max:", max(a)) # max: 9
print("min:", min(a)) # min: 2
sum((1, 2, 3, 4, 5))
# 借助科学计算库 math\scipy\numpy
import math
math.exp(1)   # 指数   ---2.718...
math.log2(2)  # 对数   ---1.0
math.sqrt(4)  # 开平方运算   ---2.0
import numpy as np
a = [1, 2, 3, 4, 5]
np.mean(a)   ---均值   3.0
np.median(a) ---中位数 3.0
np.std(a)    ---标准差 1.414....


# 二、字符串类型
print("I'm 18 years old")  # I'm 18 years old
print('"Python" is good')  # "Python" is good
print("\"Python\" is good")  # \ 我是个字符呀  "Python" is good
# 等等，我还没完事！
s = "py\   # python
thon"                    

# 2.2 字符串的性质
# 2.2.1 字符串的索引
s = "My name is Peppa Pig"
print(s[0])   # M 
print(s[2])   #  
print(s[5])   # m
print(s[-1])  # g
print(s[-3])  # P
print(s[-5])  # a
# 2.2.2 字符串的切片
# 变量名[开始位置：结束位置：切片间隔]   不包含结束位置。 不设置间隔默认为1
s = "Python"
s[0:3:1]   # Pyt
s[0:3]     # Pyt
s[0:3:2]   # Pt
# 起始位置为0可省略     结束位置省略表示取到最后一个字符    可使用反向索引
s[0:6]     # Python
s[:6]      # Python
s[:]       # Python
s[-6:]     # Python
# 反向切片  起始位置-1也可省略   结束位置省略取到第一个字符
s = "123456789"
s[-1:-10:-1]    # 987654321
s[:-10:-1]      # 987654321
s[::-1]         # 987654321













